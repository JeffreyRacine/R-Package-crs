useDynLib(crs, .registration = TRUE)
importFrom("grDevices", "extendrange", "topo.colors", "n2mfrow")
importFrom("graphics", "par", "plot")
importFrom("utils", "flush.console")
import(stats, boot, np, quantreg)
export(clsd,
       crs,
       crsiv,
       crsivderiv,       
       crssigtest,
       frscv,
       frscvNOMAD, 
       gsl.bs,
       krscv,
       krscvNOMAD,
       npglpreg,
       snomadr,
       glp.model.matrix,       
       tensor.prod.model.matrix,
       uniquecombs)

S3method(coef, clsd)
S3method(fitted, clsd)
S3method(plot, clsd)
S3method(print, clsd)
S3method(summary, clsd)

S3method(print, sigtest.crs)
S3method(summary, sigtest.crs)

S3method(crs, formula)
S3method(crs, default)

S3method(print, crscv)
S3method(summary, crscv)

S3method(print, crs)
S3method(summary, crs)
S3method(predict, crs)
S3method(plot, crs)

S3method(gsl.bs, default)
S3method(predict, gsl.bs)

S3method(print, snomadr)

S3method(npglpreg, formula)
S3method(npglpreg, default)
S3method(predict, npglpreg)
S3method(print, npglpreg)
S3method(summary, npglpreg)
S3method(plot, npglpreg)
